/**
* @fileoverview Quest System for Minecraft Bedrock
* @version 1.0.0
* @date 2025-03-13 18:43:28 UTC
* @author zLemonDev <https://github.com/zLemonDev>
* @license MIT
* 
* NOTICE: This code is protected and obfuscated.
* Any attempt to deobfuscate or modify without permission is prohibited.
*/

import { world as _w, system as _s, Player as _P, ItemStack as _I, EntityInventoryComponent as _E } from "@minecraft/server"; import { ActionFormData as _A } from "@minecraft/server-ui"; const _0x2 = ["replace", "sendMessage", "id", "container", "inventory", "progress", "completed", "target", "type", "amount", "length", "random", "floor", "minecraft:"]; const _0x3 = (_0x4) => _0x2[_0x4]; const _0x5 = ["diamond", "iron_ingot", "gold_ingot", "emerald", "apple", "chicken_spawn_egg", "cow_spawn_egg", "sheep_spawn_egg", "wheat_seeds", "potato", "carrot", "pig_spawn_egg", "bread", "cooked_beef", "wheat_seeds", "carrot", "potato", "beetroot_seeds", "pumpkin_seeds", "melon_seeds", "bone_meal", "bamboo", "sweet_berries"].map(x => `${_0x3(13)}${x}`); const _0x6 = ["wheat", "carrots", "potatoes", "beetroots", "pumpkin_stem", "melon_stem", "sweet_berry_bush", "bamboo_sapling"].map(x => `${_0x3(13)}${x}`); const _0x7 = ["stone", "dirt", "grass_block", "sand", "gravel", "cobblestone", "deepslate", "netherrack", "coal_ore", "deepslate_coal_ore", "iron_ore", "deepslate_iron_ore", "gold_ore", "deepslate_gold_ore", "redstone_ore", "deepslate_redstone_ore", "lapis_ore", "deepslate_lapis_ore", "nether_gold_ore", "ancient_debris", "oak_log", "birch_log", "jungle_log", "spruce_log", "dark_oak_log", "cherry_log"].map(x => `${_0x3(13)}${x}`); const _0x8 = ["cow", "chicken", "pig", "sheep", "rabbit", "goat"].map(x => `${_0x3(13)}${x}`); const _0x9 = ["zombie", "skeleton", "spider", "creeper", "husk"].map(x => `${_0x3(13)}${x}`); const _r = new Map(); const _0xa = _0x5.map(x => new _I(x, Math[_0x3(12)](Math[_0x3(11)]() * 10) + 1)); function _0xb(_p) { const _t = ["ขุดบล็อค", "ฆ่าสัตว์", "ฆ่ามอนเตอร์", "ปลูกผัก"]; const _y = _t[Math[_0x3(12)](Math[_0x3(11)]() * _t[_0x3(10)])]; let _g = ""; let _m = Math[_0x3(12)](Math[_0x3(11)]() * 31) + 20; switch (_y) { case _t[0]: _g = _0x7[Math[_0x3(12)](Math[_0x3(11)]() * _0x7[_0x3(10)])]; break; case _t[1]: _g = _0x8[Math[_0x3(12)](Math[_0x3(11)]() * _0x8[_0x3(10)])]; break; case _t[2]: _g = _0x9[Math[_0x3(12)](Math[_0x3(11)]() * _0x9[_0x3(10)])]; break; case _t[3]: _g = _0x6[Math[_0x3(12)](Math[_0x3(11)]() * _0x6[_0x3(10)])]; _m = Math[_0x3(12)](Math[_0x3(11)]() * 11) + 10; break; }_r.set(_p[_0x3(2)], { [_0x3(8)]: _y, [_0x3(7)]: _g, [_0x3(9)]: _m, [_0x3(5)]: 0, [_0x3(6)]: !1 }); _p[_0x3(1)]("§6เควสใหม่มาแล้ว!"); _p[_0x3(1)](`§f➡ ${_y.toUpperCase()} §7(${_g[_0x3(0)](_0x3(13), "")} x${_m})`); } function _0xc(_p) { const _q = _r.get(_p[_0x3(2)]); if (!_q) return; _q[_0x3(6)] = !0; _p[_0x3(1)]("§aเควสสำเร็จแล้ว!"); _p[_0x3(1)]("§f▶ เปิดสมุดเพื่อรับของรางวัลของคุณ"); } function _0xd(_p, _t, _g) { const _q = _r.get(_p[_0x3(2)]); if (!_q || _q[_0x3(8)] !== _t || _q[_0x3(7)] !== _g || _q[_0x3(6)]) return; _q[_0x3(5)]++; _p[_0x3(1)](`§f➡ §eความคืบหน้า:§6 ${_q[_0x3(5)]}/${_q[_0x3(9)]}`); if (_q[_0x3(5)] >= _q[_0x3(9)]) _0xc(_p); } _w.beforeEvents.playerBreakBlock.subscribe(e => _0xd(e.player, "ขุดบล็อค", e.block.typeId)); _w.afterEvents.entityDie.subscribe(e => { if (!e.damageSource.damagingEntity || !(e.damageSource.damagingEntity instanceof _P)) return; const _p = e.damageSource.damagingEntity, _e = e.deadEntity; if (_e.typeId.startsWith(_0x3(13))) { if (_0x8.includes(_e.typeId)) _0xd(_p, "ฆ่าสัตว์", _e.typeId); else if (_0x9.includes(_e.typeId)) _0xd(_p, "ฆ่ามอนเตอร์", _e.typeId); } }); _w.afterEvents.playerPlaceBlock.subscribe(e => { const _p = e.player, _q = _r.get(_p[_0x3(2)]), _b = e.block.typeId; if (_q?.type === "ปลูกผัก" && _0x6.includes(_b)) _0xd(_p, "ปลูกผัก", _b); }); _w.afterEvents.itemUse.subscribe(e => { if (e.itemStack.typeId !== "lemon:quest_books") return; const _p = e.source; let _q = _r.get(_p[_0x3(2)]); if (!_q) { _0xb(_p); _q = _r.get(_p[_0x3(2)]); } const _f = new _A().title("§bQuest Status"); if (_q[_0x3(6)]) _f.body(`§6คุณทำเควสสำเร็จแล้ว!\n\n§f▶ §eประเภท: §a${_q[_0x3(8)].toUpperCase()}\n§f▶ §eเป้าหมาย: §b${_q[_0x3(7)][_0x3(0)](_0x3(13), "")}\n§f▶ §eความคืบหน้า: §6${_q[_0x3(9)]}/${_q[_0x3(9)]}\n\nกด "รับรางวัล" เพื่อรับรางวัลของคุณ!`).button("รับของรางวัล!").button("ปิดหน้าต่าง"); else _f.body(`§6เควสปัจจุบันของคุณ\n\n§f▶ §eประเภท: §a${_q[_0x3(8)].toUpperCase()}\n§f▶ §eเป้าหมาย: §b${_q[_0x3(7)][_0x3(0)](_0x3(13), "")}\n§f▶ §eความคืบหน้า: §6${_q[_0x3(5)]}/${_q[_0x3(9)]}\n\n§d ทำต่อไป! ทำภารกิจให้สำเร็จเพื่อรับรางวัล!`).button("ปิดหน้าต่าง"); _f.show(_p).then(r => { if (r.selection === 0 && _q[_0x3(6)]) { const _w = _0xa[Math[_0x3(12)](Math[_0x3(11)]() * _0xa[_0x3(10)])]; const _i = _p.getComponent(_0x3(4)) as _E; if (_i) { _i[_0x3(3)].addItem(_w); _p[_0x3(1)](`§aคุณได้รับของรางวัล: §b${_w.amount}x ${_w.typeId[_0x3(0)](_0x3(13), "")}`); _0xb(_p); } } }); }); _w.afterEvents.playerSpawn.subscribe(e => { _s.runTimeout(() => { const _p = e.player; if (!_p) return; const _i = _p.getComponent(_0x3(4)) as _E; if (_i && _i[_0x3(3)]) { let _h = !1; for (let i = 0; i < _i[_0x3(3)].size; i++) { const _t = _i[_0x3(3)].getItem(i); if (_t && _t.typeId === "lemon:quest_books") { _h = !0; break; } } if (!_h) { const _s = _i[_0x3(3)].addItem(new _I("lemon:quest_books", 1)); if (_s) _p[_0x3(1)]("§eคุณได้รับ §aสมุดเควส §eแล้ว!"); } } if (!_r.has(_p[_0x3(2)])) _0xb(_p); }, 20); });